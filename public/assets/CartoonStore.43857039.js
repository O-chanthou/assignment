import{A as g}from"./index.360080b6.js";import{a as u,e as p,b as r,d as n,c as d,f as h,y as f}from"./firebase-config.2a97ce7f.js";const m=[],D=g("useCartoonStore",{state:()=>({cartoons:m,cartoonDetail:{},loaded:"",updateMsg:"",isDelete:!1,isLoading:!1}),getters:{getFavorite(){return console.log("start get fav"),this.cartoons.filter(e=>e.isFav)}},actions:{async fetchCartoons(e){if(this.isLoading=!0,e==null||e==null){const a=await(await fetch("http://localhost:3000/cartoons")).json();return this.cartoons=a,this.isLoading=!1,this.loaded="loaded"}else{const a=await(await fetch("http://localhost:3000/cartoons/"+e)).json();return this.cartoonDetail=a,this.isLoading=!1,this.loaded="loaded"}},async createCartoon(e){this.isLoading=!0;const t={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:e.title,year:e.year,creator:e.creator,rating:e.rating,genre:e.genre,runtime_in_minutes:e.runtime_in_minutes,episodes:e.episodes,image:e.image,id:e.id,isFav:e.isFav})},a=await fetch("http://localhost:3000/cartoons",t);if(a.ok){const s=await a.json();return this.cartoons=s,this.isLoading=!1,"success"}else return this.isLoading=!1,"fail"},async deleteCartoon(e){return this.cartoons=this.cartoons.filter(t=>t.id!==e),await fetch("http://localhost:3000/cartoons/"+e,{method:"DELETE"}).then(t=>{t.ok?(console.log("deleted"),this.isDelete=!0):(console.log("failed"),this.isDelete=!1)}),this.isDelete},async updateCartoon(e,t){console.log("start update data ......");const a={method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t.title,year:t.year,creator:t.creator,rating:t.rating,genre:t.genre,runtime_in_minutes:t.runtime,episodes:t.episode,image:t.image,isFav:t.isFav})},s=await fetch("http://localhost:3000/cartoons/"+e,a);if(s.ok){const i=await s.json();return this.cartoonDetail=i,this.updateMsg="success"}else return this.updateMsg="fail"},async toggleFavorite(e,t){const a={method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({isFav:t=!t})},s=await fetch("http://localhost:3000/cartoons/"+e,a);if(s.ok){const i=await s.json();return this.cartoonDetail=i,this.updateMsg="success"}else return this.updateMsg="fail"},async fetchCartoonsFB(e){if(this.isLoading=!0,e==""||e==null||e==null){const t=[];return(await u(p(n,"cartoons"))).forEach(s=>{const i={id:s.id,title:s.data().title,year:s.data().year,rating:s.data().rating,runtime_in_minutes:s.data().runtime_in_minutes,isFav:s.data().isFav,image:s.data().image,genre:s.data().genre,episodes:s.data().episodes,creator:s.data().creator};t.push(i)}),this.cartoons=t,this.isLoading=!1,this.loaded="loaded"}else try{const t=r(n,"cartoons",`${e}`),a=await d(t);return this.cartoonDetail=a.data(),this.isLoading=!1,this.loaded="loaded"}catch(t){console.log(t),this.isLoading=!1}},async updateCartoonFB(e,t){return console.log("start ....."),new Promise((a,s)=>{const i=r(n,"cartoons",`${e}`),l={title:t.title,year:t.year,creator:t.creator,rating:t.rating,genre:t.genre,runtime_in_minutes:t.runtime,episodes:t.episode,image:t.image,isFav:t.isFav};console.log("start .........."),h(i,l).then(async o=>{const c=await d(i);this.cartoonDetail=c.data(),this.updateMsg="success",console.log("start ..............."),a(o)}).catch(o=>{this.updateMsg="fail",s(o)})})},async deleteCartoonFB(e){return console.log("start delete..."),new Promise((t,a)=>{const s=r(n,"cartoons",`${e}`);console.log("start delete......"),f(s).then(async i=>{console.log("Document has been deleted successfully."),this.isDelete=!0,t(i)}).catch(i=>{console.log(i),this.isDelete=!1,a(i)}),console.log("start delete...//"),console.log("this.isDelete:: "+this.isDelete),this.isDelete,this.cartoons=this.cartoons.filter(i=>i.id!==e)})},async toggleFavoriteFB(e,t){return new Promise((a,s)=>{const i=r(n,"cartoons",`${e}`),l={isFav:t=!t};h(i,l).then(async o=>{const c=await d(i);this.cartoonDetail=c.data(),this.updateMsg="success",a(o)}).catch(o=>{this.updateMsg="fail",s(o)})})}}});export{D as u};
